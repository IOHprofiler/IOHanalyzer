// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// align_by_target_inner_loop
NumericVector align_by_target_inner_loop(double t, int idxEvals, int idxTarget, List data, NumericVector index, NumericMatrix next_lines, NumericVector curr_eval, bool maximization);
RcppExport SEXP _IOHanalyzer_align_by_target_inner_loop(SEXP tSEXP, SEXP idxEvalsSEXP, SEXP idxTargetSEXP, SEXP dataSEXP, SEXP indexSEXP, SEXP next_linesSEXP, SEXP curr_evalSEXP, SEXP maximizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type idxEvals(idxEvalsSEXP);
    Rcpp::traits::input_parameter< int >::type idxTarget(idxTargetSEXP);
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type index(indexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type next_lines(next_linesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type curr_eval(curr_evalSEXP);
    Rcpp::traits::input_parameter< bool >::type maximization(maximizationSEXP);
    rcpp_result_gen = Rcpp::wrap(align_by_target_inner_loop(t, idxEvals, idxTarget, data, index, next_lines, curr_eval, maximization));
    return rcpp_result_gen;
END_RCPP
}
// c_impute
NumericVector c_impute(NumericVector x, NumericVector y, NumericVector rowname);
RcppExport SEXP _IOHanalyzer_c_impute(SEXP xSEXP, SEXP ySEXP, SEXP rownameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rowname(rownameSEXP);
    rcpp_result_gen = Rcpp::wrap(c_impute(x, y, rowname));
    return rcpp_result_gen;
END_RCPP
}
// c_impute_running_time
NumericMatrix c_impute_running_time(NumericVector index, NumericMatrix value, NumericVector FV, bool maximization);
RcppExport SEXP _IOHanalyzer_c_impute_running_time(SEXP indexSEXP, SEXP valueSEXP, SEXP FVSEXP, SEXP maximizationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type index(indexSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type value(valueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FV(FVSEXP);
    Rcpp::traits::input_parameter< bool >::type maximization(maximizationSEXP);
    rcpp_result_gen = Rcpp::wrap(c_impute_running_time(index, value, FV, maximization));
    return rcpp_result_gen;
END_RCPP
}
// c_align_running_time
List c_align_running_time(List data, NumericVector FV, NumericVector idxValue, bool maximization, int idxTarget);
RcppExport SEXP _IOHanalyzer_c_align_running_time(SEXP dataSEXP, SEXP FVSEXP, SEXP idxValueSEXP, SEXP maximizationSEXP, SEXP idxTargetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FV(FVSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type idxValue(idxValueSEXP);
    Rcpp::traits::input_parameter< bool >::type maximization(maximizationSEXP);
    Rcpp::traits::input_parameter< int >::type idxTarget(idxTargetSEXP);
    rcpp_result_gen = Rcpp::wrap(c_align_running_time(data, FV, idxValue, maximization, idxTarget));
    return rcpp_result_gen;
END_RCPP
}
// c_read_dat
List c_read_dat(std::string dat, int NC, std::string leading);
RcppExport SEXP _IOHanalyzer_c_read_dat(SEXP datSEXP, SEXP NCSEXP, SEXP leadingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type dat(datSEXP);
    Rcpp::traits::input_parameter< int >::type NC(NCSEXP);
    Rcpp::traits::input_parameter< std::string >::type leading(leadingSEXP);
    rcpp_result_gen = Rcpp::wrap(c_read_dat(dat, NC, leading));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_IOHanalyzer_align_by_target_inner_loop", (DL_FUNC) &_IOHanalyzer_align_by_target_inner_loop, 8},
    {"_IOHanalyzer_c_impute", (DL_FUNC) &_IOHanalyzer_c_impute, 3},
    {"_IOHanalyzer_c_impute_running_time", (DL_FUNC) &_IOHanalyzer_c_impute_running_time, 4},
    {"_IOHanalyzer_c_align_running_time", (DL_FUNC) &_IOHanalyzer_c_align_running_time, 5},
    {"_IOHanalyzer_c_read_dat", (DL_FUNC) &_IOHanalyzer_c_read_dat, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_IOHanalyzer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
